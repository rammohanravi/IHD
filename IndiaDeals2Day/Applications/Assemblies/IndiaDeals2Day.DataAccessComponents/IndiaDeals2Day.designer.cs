#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndiaDeals2Day.DataAccessComponents
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Id2d")]
	public partial class IndiaDeals2DayDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTbl_UserRole(Tbl_UserRole instance);
    partial void UpdateTbl_UserRole(Tbl_UserRole instance);
    partial void DeleteTbl_UserRole(Tbl_UserRole instance);
    partial void InsertTbl_AskThread(Tbl_AskThread instance);
    partial void UpdateTbl_AskThread(Tbl_AskThread instance);
    partial void DeleteTbl_AskThread(Tbl_AskThread instance);
    partial void InsertTbl_AskThreadResponse(Tbl_AskThreadResponse instance);
    partial void UpdateTbl_AskThreadResponse(Tbl_AskThreadResponse instance);
    partial void DeleteTbl_AskThreadResponse(Tbl_AskThreadResponse instance);
    partial void InsertTbl_Badge(Tbl_Badge instance);
    partial void UpdateTbl_Badge(Tbl_Badge instance);
    partial void DeleteTbl_Badge(Tbl_Badge instance);
    partial void InsertTbl_VoucherCompany(Tbl_VoucherCompany instance);
    partial void UpdateTbl_VoucherCompany(Tbl_VoucherCompany instance);
    partial void DeleteTbl_VoucherCompany(Tbl_VoucherCompany instance);
    partial void InsertTbl_VoucherComment(Tbl_VoucherComment instance);
    partial void UpdateTbl_VoucherComment(Tbl_VoucherComment instance);
    partial void DeleteTbl_VoucherComment(Tbl_VoucherComment instance);
    partial void InsertTbl_RecordUser(Tbl_RecordUser instance);
    partial void UpdateTbl_RecordUser(Tbl_RecordUser instance);
    partial void DeleteTbl_RecordUser(Tbl_RecordUser instance);
    partial void InsertTbl_DealType(Tbl_DealType instance);
    partial void UpdateTbl_DealType(Tbl_DealType instance);
    partial void DeleteTbl_DealType(Tbl_DealType instance);
    partial void InsertTbl_DealComment(Tbl_DealComment instance);
    partial void UpdateTbl_DealComment(Tbl_DealComment instance);
    partial void DeleteTbl_DealComment(Tbl_DealComment instance);
    partial void InsertTbl_DealCategory(Tbl_DealCategory instance);
    partial void UpdateTbl_DealCategory(Tbl_DealCategory instance);
    partial void DeleteTbl_DealCategory(Tbl_DealCategory instance);
    partial void InsertTbl_Voucher(Tbl_Voucher instance);
    partial void UpdateTbl_Voucher(Tbl_Voucher instance);
    partial void DeleteTbl_Voucher(Tbl_Voucher instance);
    partial void InsertTbl_DealPriceCategory(Tbl_DealPriceCategory instance);
    partial void UpdateTbl_DealPriceCategory(Tbl_DealPriceCategory instance);
    partial void DeleteTbl_DealPriceCategory(Tbl_DealPriceCategory instance);
    partial void InsertTbl_ApplicationLog(Tbl_ApplicationLog instance);
    partial void UpdateTbl_ApplicationLog(Tbl_ApplicationLog instance);
    partial void DeleteTbl_ApplicationLog(Tbl_ApplicationLog instance);
    partial void InsertTbl_UserProfile(Tbl_UserProfile instance);
    partial void UpdateTbl_UserProfile(Tbl_UserProfile instance);
    partial void DeleteTbl_UserProfile(Tbl_UserProfile instance);
    partial void InsertTbl_Statastic(Tbl_Statastic instance);
    partial void UpdateTbl_Statastic(Tbl_Statastic instance);
    partial void DeleteTbl_Statastic(Tbl_Statastic instance);
    partial void InsertTbl_UserPersonalDetail(Tbl_UserPersonalDetail instance);
    partial void UpdateTbl_UserPersonalDetail(Tbl_UserPersonalDetail instance);
    partial void DeleteTbl_UserPersonalDetail(Tbl_UserPersonalDetail instance);
    partial void InsertTbl_UserAccess(Tbl_UserAccess instance);
    partial void UpdateTbl_UserAccess(Tbl_UserAccess instance);
    partial void DeleteTbl_UserAccess(Tbl_UserAccess instance);
    partial void InsertTbl_Deal(Tbl_Deal instance);
    partial void UpdateTbl_Deal(Tbl_Deal instance);
    partial void DeleteTbl_Deal(Tbl_Deal instance);
    #endregion
		
		public IndiaDeals2DayDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IndiaDeals2DayDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IndiaDeals2DayDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IndiaDeals2DayDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tbl_UserRole> Tbl_UserRoles
		{
			get
			{
				return this.GetTable<Tbl_UserRole>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_AskThread> Tbl_AskThreads
		{
			get
			{
				return this.GetTable<Tbl_AskThread>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_AskThreadResponse> Tbl_AskThreadResponses
		{
			get
			{
				return this.GetTable<Tbl_AskThreadResponse>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Badge> Tbl_Badges
		{
			get
			{
				return this.GetTable<Tbl_Badge>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_VoucherCompany> Tbl_VoucherCompanies
		{
			get
			{
				return this.GetTable<Tbl_VoucherCompany>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_VoucherComment> Tbl_VoucherComments
		{
			get
			{
				return this.GetTable<Tbl_VoucherComment>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_RecordUser> Tbl_RecordUsers
		{
			get
			{
				return this.GetTable<Tbl_RecordUser>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_DealType> Tbl_DealTypes
		{
			get
			{
				return this.GetTable<Tbl_DealType>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_DealComment> Tbl_DealComments
		{
			get
			{
				return this.GetTable<Tbl_DealComment>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_DealCategory> Tbl_DealCategories
		{
			get
			{
				return this.GetTable<Tbl_DealCategory>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Voucher> Tbl_Vouchers
		{
			get
			{
				return this.GetTable<Tbl_Voucher>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_DealPriceCategory> Tbl_DealPriceCategories
		{
			get
			{
				return this.GetTable<Tbl_DealPriceCategory>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_ApplicationLog> Tbl_ApplicationLogs
		{
			get
			{
				return this.GetTable<Tbl_ApplicationLog>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_UserProfile> Tbl_UserProfiles
		{
			get
			{
				return this.GetTable<Tbl_UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Statastic> Tbl_Statastics
		{
			get
			{
				return this.GetTable<Tbl_Statastic>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_UserPersonalDetail> Tbl_UserPersonalDetails
		{
			get
			{
				return this.GetTable<Tbl_UserPersonalDetail>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_UserAccess> Tbl_UserAccesses
		{
			get
			{
				return this.GetTable<Tbl_UserAccess>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Deal> Tbl_Deals
		{
			get
			{
				return this.GetTable<Tbl_Deal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_UserRoles")]
	public partial class Tbl_UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRoleID;
		
		private string _UserRoleName;
		
		private string _MasterPage;
		
		private EntitySet<Tbl_UserAccess> _Tbl_UserAccesses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleIDChanging(int value);
    partial void OnUserRoleIDChanged();
    partial void OnUserRoleNameChanging(string value);
    partial void OnUserRoleNameChanged();
    partial void OnMasterPageChanging(string value);
    partial void OnMasterPageChanged();
    #endregion
		
		public Tbl_UserRole()
		{
			this._Tbl_UserAccesses = new EntitySet<Tbl_UserAccess>(new Action<Tbl_UserAccess>(this.attach_Tbl_UserAccesses), new Action<Tbl_UserAccess>(this.detach_Tbl_UserAccesses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRoleID
		{
			get
			{
				return this._UserRoleID;
			}
			set
			{
				if ((this._UserRoleID != value))
				{
					this.OnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._UserRoleID = value;
					this.SendPropertyChanged("UserRoleID");
					this.OnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserRoleName
		{
			get
			{
				return this._UserRoleName;
			}
			set
			{
				if ((this._UserRoleName != value))
				{
					this.OnUserRoleNameChanging(value);
					this.SendPropertyChanging();
					this._UserRoleName = value;
					this.SendPropertyChanged("UserRoleName");
					this.OnUserRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterPage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MasterPage
		{
			get
			{
				return this._MasterPage;
			}
			set
			{
				if ((this._MasterPage != value))
				{
					this.OnMasterPageChanging(value);
					this.SendPropertyChanging();
					this._MasterPage = value;
					this.SendPropertyChanged("MasterPage");
					this.OnMasterPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserRole_Tbl_UserAccess", Storage="_Tbl_UserAccesses", ThisKey="UserRoleID", OtherKey="UserRoleID")]
		public EntitySet<Tbl_UserAccess> Tbl_UserAccesses
		{
			get
			{
				return this._Tbl_UserAccesses;
			}
			set
			{
				this._Tbl_UserAccesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_UserAccesses(Tbl_UserAccess entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserRole = this;
		}
		
		private void detach_Tbl_UserAccesses(Tbl_UserAccess entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_AskThread")]
	public partial class Tbl_AskThread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AskThreadID;
		
		private System.Nullable<int> _UserAccessID;
		
		private string _AskThreadDescription;
		
		private int _AskThreadStatus;
		
		private System.Nullable<System.DateTime> _AskThreadPostedDate;
		
		private System.Nullable<int> _ApprovedBy;
		
		private EntitySet<Tbl_AskThreadResponse> _Tbl_AskThreadResponses;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAskThreadIDChanging(int value);
    partial void OnAskThreadIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<int> value);
    partial void OnUserAccessIDChanged();
    partial void OnAskThreadDescriptionChanging(string value);
    partial void OnAskThreadDescriptionChanged();
    partial void OnAskThreadStatusChanging(int value);
    partial void OnAskThreadStatusChanged();
    partial void OnAskThreadPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAskThreadPostedDateChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    #endregion
		
		public Tbl_AskThread()
		{
			this._Tbl_AskThreadResponses = new EntitySet<Tbl_AskThreadResponse>(new Action<Tbl_AskThreadResponse>(this.attach_Tbl_AskThreadResponses), new Action<Tbl_AskThreadResponse>(this.detach_Tbl_AskThreadResponses));
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			this._Tbl_UserAccess1 = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskThreadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AskThreadID
		{
			get
			{
				return this._AskThreadID;
			}
			set
			{
				if ((this._AskThreadID != value))
				{
					this.OnAskThreadIDChanging(value);
					this.SendPropertyChanging();
					this._AskThreadID = value;
					this.SendPropertyChanged("AskThreadID");
					this.OnAskThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int")]
		public System.Nullable<int> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskThreadDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AskThreadDescription
		{
			get
			{
				return this._AskThreadDescription;
			}
			set
			{
				if ((this._AskThreadDescription != value))
				{
					this.OnAskThreadDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AskThreadDescription = value;
					this.SendPropertyChanged("AskThreadDescription");
					this.OnAskThreadDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskThreadStatus", DbType="Int NOT NULL")]
		public int AskThreadStatus
		{
			get
			{
				return this._AskThreadStatus;
			}
			set
			{
				if ((this._AskThreadStatus != value))
				{
					this.OnAskThreadStatusChanging(value);
					this.SendPropertyChanging();
					this._AskThreadStatus = value;
					this.SendPropertyChanged("AskThreadStatus");
					this.OnAskThreadStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskThreadPostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AskThreadPostedDate
		{
			get
			{
				return this._AskThreadPostedDate;
			}
			set
			{
				if ((this._AskThreadPostedDate != value))
				{
					this.OnAskThreadPostedDateChanging(value);
					this.SendPropertyChanging();
					this._AskThreadPostedDate = value;
					this.SendPropertyChanged("AskThreadPostedDate");
					this.OnAskThreadPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_AskThread_Tbl_AskThreadResponse", Storage="_Tbl_AskThreadResponses", ThisKey="AskThreadID", OtherKey="AskThreadID")]
		public EntitySet<Tbl_AskThreadResponse> Tbl_AskThreadResponses
		{
			get
			{
				return this._Tbl_AskThreadResponses;
			}
			set
			{
				this._Tbl_AskThreadResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThread", Storage="_Tbl_UserAccess", ThisKey="ApprovedBy", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_AskThreads.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_AskThreads.Add(this);
						this._ApprovedBy = value.UserAccessID;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThread1", Storage="_Tbl_UserAccess1", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess1
		{
			get
			{
				return this._Tbl_UserAccess1.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess1.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess1.Entity = null;
						previousValue.Tbl_AskThreads1.Remove(this);
					}
					this._Tbl_UserAccess1.Entity = value;
					if ((value != null))
					{
						value.Tbl_AskThreads1.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_AskThreadResponses(Tbl_AskThreadResponse entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_AskThread = this;
		}
		
		private void detach_Tbl_AskThreadResponses(Tbl_AskThreadResponse entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_AskThread = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_AskThreadResponses")]
	public partial class Tbl_AskThreadResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AskThreadResponseID;
		
		private System.Nullable<int> _AskThreadID;
		
		private System.Nullable<int> _UserAccessID;
		
		private string _ResponseDescription;
		
		private int _ResponseStatus;
		
		private System.Nullable<System.DateTime> _ResponsePostedDate;
		
		private System.Nullable<int> _ApprovedBy;
		
		private EntityRef<Tbl_AskThread> _Tbl_AskThread;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAskThreadResponseIDChanging(int value);
    partial void OnAskThreadResponseIDChanged();
    partial void OnAskThreadIDChanging(System.Nullable<int> value);
    partial void OnAskThreadIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<int> value);
    partial void OnUserAccessIDChanged();
    partial void OnResponseDescriptionChanging(string value);
    partial void OnResponseDescriptionChanged();
    partial void OnResponseStatusChanging(int value);
    partial void OnResponseStatusChanged();
    partial void OnResponsePostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResponsePostedDateChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    #endregion
		
		public Tbl_AskThreadResponse()
		{
			this._Tbl_AskThread = default(EntityRef<Tbl_AskThread>);
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			this._Tbl_UserAccess1 = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskThreadResponseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AskThreadResponseID
		{
			get
			{
				return this._AskThreadResponseID;
			}
			set
			{
				if ((this._AskThreadResponseID != value))
				{
					this.OnAskThreadResponseIDChanging(value);
					this.SendPropertyChanging();
					this._AskThreadResponseID = value;
					this.SendPropertyChanged("AskThreadResponseID");
					this.OnAskThreadResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskThreadID", DbType="Int")]
		public System.Nullable<int> AskThreadID
		{
			get
			{
				return this._AskThreadID;
			}
			set
			{
				if ((this._AskThreadID != value))
				{
					if (this._Tbl_AskThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAskThreadIDChanging(value);
					this.SendPropertyChanging();
					this._AskThreadID = value;
					this.SendPropertyChanged("AskThreadID");
					this.OnAskThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int")]
		public System.Nullable<int> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ResponseDescription
		{
			get
			{
				return this._ResponseDescription;
			}
			set
			{
				if ((this._ResponseDescription != value))
				{
					this.OnResponseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ResponseDescription = value;
					this.SendPropertyChanged("ResponseDescription");
					this.OnResponseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseStatus", DbType="Int NOT NULL")]
		public int ResponseStatus
		{
			get
			{
				return this._ResponseStatus;
			}
			set
			{
				if ((this._ResponseStatus != value))
				{
					this.OnResponseStatusChanging(value);
					this.SendPropertyChanging();
					this._ResponseStatus = value;
					this.SendPropertyChanged("ResponseStatus");
					this.OnResponseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsePostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResponsePostedDate
		{
			get
			{
				return this._ResponsePostedDate;
			}
			set
			{
				if ((this._ResponsePostedDate != value))
				{
					this.OnResponsePostedDateChanging(value);
					this.SendPropertyChanging();
					this._ResponsePostedDate = value;
					this.SendPropertyChanged("ResponsePostedDate");
					this.OnResponsePostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_AskThread_Tbl_AskThreadResponse", Storage="_Tbl_AskThread", ThisKey="AskThreadID", OtherKey="AskThreadID", IsForeignKey=true)]
		public Tbl_AskThread Tbl_AskThread
		{
			get
			{
				return this._Tbl_AskThread.Entity;
			}
			set
			{
				Tbl_AskThread previousValue = this._Tbl_AskThread.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_AskThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_AskThread.Entity = null;
						previousValue.Tbl_AskThreadResponses.Remove(this);
					}
					this._Tbl_AskThread.Entity = value;
					if ((value != null))
					{
						value.Tbl_AskThreadResponses.Add(this);
						this._AskThreadID = value.AskThreadID;
					}
					else
					{
						this._AskThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_AskThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThreadResponse", Storage="_Tbl_UserAccess", ThisKey="ApprovedBy", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_AskThreadResponses.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_AskThreadResponses.Add(this);
						this._ApprovedBy = value.UserAccessID;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThreadResponse1", Storage="_Tbl_UserAccess1", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess1
		{
			get
			{
				return this._Tbl_UserAccess1.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess1.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess1.Entity = null;
						previousValue.Tbl_AskThreadResponses1.Remove(this);
					}
					this._Tbl_UserAccess1.Entity = value;
					if ((value != null))
					{
						value.Tbl_AskThreadResponses1.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Badges")]
	public partial class Tbl_Badge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BadgeID;
		
		private string _BadgeName;
		
		private int _BadgeDegree;
		
		private EntitySet<Tbl_UserProfile> _Tbl_UserProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBadgeIDChanging(int value);
    partial void OnBadgeIDChanged();
    partial void OnBadgeNameChanging(string value);
    partial void OnBadgeNameChanged();
    partial void OnBadgeDegreeChanging(int value);
    partial void OnBadgeDegreeChanged();
    #endregion
		
		public Tbl_Badge()
		{
			this._Tbl_UserProfiles = new EntitySet<Tbl_UserProfile>(new Action<Tbl_UserProfile>(this.attach_Tbl_UserProfiles), new Action<Tbl_UserProfile>(this.detach_Tbl_UserProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BadgeID
		{
			get
			{
				return this._BadgeID;
			}
			set
			{
				if ((this._BadgeID != value))
				{
					this.OnBadgeIDChanging(value);
					this.SendPropertyChanging();
					this._BadgeID = value;
					this.SendPropertyChanged("BadgeID");
					this.OnBadgeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeName", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string BadgeName
		{
			get
			{
				return this._BadgeName;
			}
			set
			{
				if ((this._BadgeName != value))
				{
					this.OnBadgeNameChanging(value);
					this.SendPropertyChanging();
					this._BadgeName = value;
					this.SendPropertyChanged("BadgeName");
					this.OnBadgeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeDegree", DbType="Int NOT NULL")]
		public int BadgeDegree
		{
			get
			{
				return this._BadgeDegree;
			}
			set
			{
				if ((this._BadgeDegree != value))
				{
					this.OnBadgeDegreeChanging(value);
					this.SendPropertyChanging();
					this._BadgeDegree = value;
					this.SendPropertyChanged("BadgeDegree");
					this.OnBadgeDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Badge_Tbl_UserProfile", Storage="_Tbl_UserProfiles", ThisKey="BadgeID", OtherKey="BadgeID")]
		public EntitySet<Tbl_UserProfile> Tbl_UserProfiles
		{
			get
			{
				return this._Tbl_UserProfiles;
			}
			set
			{
				this._Tbl_UserProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_UserProfiles(Tbl_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Badge = this;
		}
		
		private void detach_Tbl_UserProfiles(Tbl_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Badge = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_VoucherCompany")]
	public partial class Tbl_VoucherCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherCompanyID;
		
		private string _VoucherCompanyName;
		
		private string _VoucherCompanyDescription;
		
		private EntitySet<Tbl_Voucher> _Tbl_Vouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherCompanyIDChanging(int value);
    partial void OnVoucherCompanyIDChanged();
    partial void OnVoucherCompanyNameChanging(string value);
    partial void OnVoucherCompanyNameChanged();
    partial void OnVoucherCompanyDescriptionChanging(string value);
    partial void OnVoucherCompanyDescriptionChanged();
    #endregion
		
		public Tbl_VoucherCompany()
		{
			this._Tbl_Vouchers = new EntitySet<Tbl_Voucher>(new Action<Tbl_Voucher>(this.attach_Tbl_Vouchers), new Action<Tbl_Voucher>(this.detach_Tbl_Vouchers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VoucherCompanyID
		{
			get
			{
				return this._VoucherCompanyID;
			}
			set
			{
				if ((this._VoucherCompanyID != value))
				{
					this.OnVoucherCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherCompanyID = value;
					this.SendPropertyChanged("VoucherCompanyID");
					this.OnVoucherCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCompanyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VoucherCompanyName
		{
			get
			{
				return this._VoucherCompanyName;
			}
			set
			{
				if ((this._VoucherCompanyName != value))
				{
					this.OnVoucherCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._VoucherCompanyName = value;
					this.SendPropertyChanged("VoucherCompanyName");
					this.OnVoucherCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCompanyDescription", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string VoucherCompanyDescription
		{
			get
			{
				return this._VoucherCompanyDescription;
			}
			set
			{
				if ((this._VoucherCompanyDescription != value))
				{
					this.OnVoucherCompanyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._VoucherCompanyDescription = value;
					this.SendPropertyChanged("VoucherCompanyDescription");
					this.OnVoucherCompanyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_VoucherCompany_Tbl_Voucher", Storage="_Tbl_Vouchers", ThisKey="VoucherCompanyID", OtherKey="VoucherCompanyID")]
		public EntitySet<Tbl_Voucher> Tbl_Vouchers
		{
			get
			{
				return this._Tbl_Vouchers;
			}
			set
			{
				this._Tbl_Vouchers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Vouchers(Tbl_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_VoucherCompany = this;
		}
		
		private void detach_Tbl_Vouchers(Tbl_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_VoucherCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_VoucherComments")]
	public partial class Tbl_VoucherComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherCommentsID;
		
		private System.Nullable<int> _VoucherID;
		
		private System.Nullable<int> _UserAccessID;
		
		private string _CommentDescription;
		
		private int _CommentStatus;
		
		private System.Nullable<System.DateTime> _CommentPostedDate;
		
		private EntityRef<Tbl_Voucher> _Tbl_Voucher;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherCommentsIDChanging(int value);
    partial void OnVoucherCommentsIDChanged();
    partial void OnVoucherIDChanging(System.Nullable<int> value);
    partial void OnVoucherIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<int> value);
    partial void OnUserAccessIDChanged();
    partial void OnCommentDescriptionChanging(string value);
    partial void OnCommentDescriptionChanged();
    partial void OnCommentStatusChanging(int value);
    partial void OnCommentStatusChanged();
    partial void OnCommentPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommentPostedDateChanged();
    #endregion
		
		public Tbl_VoucherComment()
		{
			this._Tbl_Voucher = default(EntityRef<Tbl_Voucher>);
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCommentsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VoucherCommentsID
		{
			get
			{
				return this._VoucherCommentsID;
			}
			set
			{
				if ((this._VoucherCommentsID != value))
				{
					this.OnVoucherCommentsIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherCommentsID = value;
					this.SendPropertyChanged("VoucherCommentsID");
					this.OnVoucherCommentsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", DbType="Int")]
		public System.Nullable<int> VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					if (this._Tbl_Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int")]
		public System.Nullable<int> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommentDescription
		{
			get
			{
				return this._CommentDescription;
			}
			set
			{
				if ((this._CommentDescription != value))
				{
					this.OnCommentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CommentDescription = value;
					this.SendPropertyChanged("CommentDescription");
					this.OnCommentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentStatus", DbType="Int NOT NULL")]
		public int CommentStatus
		{
			get
			{
				return this._CommentStatus;
			}
			set
			{
				if ((this._CommentStatus != value))
				{
					this.OnCommentStatusChanging(value);
					this.SendPropertyChanging();
					this._CommentStatus = value;
					this.SendPropertyChanged("CommentStatus");
					this.OnCommentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentPostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommentPostedDate
		{
			get
			{
				return this._CommentPostedDate;
			}
			set
			{
				if ((this._CommentPostedDate != value))
				{
					this.OnCommentPostedDateChanging(value);
					this.SendPropertyChanging();
					this._CommentPostedDate = value;
					this.SendPropertyChanged("CommentPostedDate");
					this.OnCommentPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Voucher_Tbl_VoucherComment", Storage="_Tbl_Voucher", ThisKey="VoucherID", OtherKey="VoucherID", IsForeignKey=true)]
		public Tbl_Voucher Tbl_Voucher
		{
			get
			{
				return this._Tbl_Voucher.Entity;
			}
			set
			{
				Tbl_Voucher previousValue = this._Tbl_Voucher.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Voucher.Entity = null;
						previousValue.Tbl_VoucherComments.Remove(this);
					}
					this._Tbl_Voucher.Entity = value;
					if ((value != null))
					{
						value.Tbl_VoucherComments.Add(this);
						this._VoucherID = value.VoucherID;
					}
					else
					{
						this._VoucherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_VoucherComment", Storage="_Tbl_UserAccess", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_VoucherComments.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_VoucherComments.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_RecordUsers")]
	public partial class Tbl_RecordUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordID;
		
		private string _UserIpAddress;
		
		private System.DateTime _RecordedDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnUserIpAddressChanging(string value);
    partial void OnUserIpAddressChanged();
    partial void OnRecordedDateTimeChanging(System.DateTime value);
    partial void OnRecordedDateTimeChanged();
    #endregion
		
		public Tbl_RecordUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIpAddress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserIpAddress
		{
			get
			{
				return this._UserIpAddress;
			}
			set
			{
				if ((this._UserIpAddress != value))
				{
					this.OnUserIpAddressChanging(value);
					this.SendPropertyChanging();
					this._UserIpAddress = value;
					this.SendPropertyChanged("UserIpAddress");
					this.OnUserIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecordedDateTime
		{
			get
			{
				return this._RecordedDateTime;
			}
			set
			{
				if ((this._RecordedDateTime != value))
				{
					this.OnRecordedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordedDateTime = value;
					this.SendPropertyChanged("RecordedDateTime");
					this.OnRecordedDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_DealType")]
	public partial class Tbl_DealType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealTypeID;
		
		private string _DealType;
		
		private string _DealTypeDescription;
		
		private System.Nullable<int> _DisplayOrder;
		
		private EntitySet<Tbl_Deal> _Tbl_Deals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealTypeIDChanging(int value);
    partial void OnDealTypeIDChanged();
    partial void OnDealTypeChanging(string value);
    partial void OnDealTypeChanged();
    partial void OnDealTypeDescriptionChanging(string value);
    partial void OnDealTypeDescriptionChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public Tbl_DealType()
		{
			this._Tbl_Deals = new EntitySet<Tbl_Deal>(new Action<Tbl_Deal>(this.attach_Tbl_Deals), new Action<Tbl_Deal>(this.detach_Tbl_Deals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealTypeID
		{
			get
			{
				return this._DealTypeID;
			}
			set
			{
				if ((this._DealTypeID != value))
				{
					this.OnDealTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DealTypeID = value;
					this.SendPropertyChanged("DealTypeID");
					this.OnDealTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealType", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DealType
		{
			get
			{
				return this._DealType;
			}
			set
			{
				if ((this._DealType != value))
				{
					this.OnDealTypeChanging(value);
					this.SendPropertyChanging();
					this._DealType = value;
					this.SendPropertyChanged("DealType");
					this.OnDealTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealTypeDescription", DbType="VarChar(MAX)")]
		public string DealTypeDescription
		{
			get
			{
				return this._DealTypeDescription;
			}
			set
			{
				if ((this._DealTypeDescription != value))
				{
					this.OnDealTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DealTypeDescription = value;
					this.SendPropertyChanged("DealTypeDescription");
					this.OnDealTypeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealType_Tbl_Deal", Storage="_Tbl_Deals", ThisKey="DealTypeID", OtherKey="DealType")]
		public EntitySet<Tbl_Deal> Tbl_Deals
		{
			get
			{
				return this._Tbl_Deals;
			}
			set
			{
				this._Tbl_Deals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealType = this;
		}
		
		private void detach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_DealComments")]
	public partial class Tbl_DealComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealCommentsID;
		
		private System.Nullable<int> _DealID;
		
		private System.Nullable<int> _UserAccessID;
		
		private string _CommentDescription;
		
		private int _CommentStatus;
		
		private System.Nullable<System.DateTime> _CommentPostedDate;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
		private EntityRef<Tbl_Deal> _Tbl_Deal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealCommentsIDChanging(int value);
    partial void OnDealCommentsIDChanged();
    partial void OnDealIDChanging(System.Nullable<int> value);
    partial void OnDealIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<int> value);
    partial void OnUserAccessIDChanged();
    partial void OnCommentDescriptionChanging(string value);
    partial void OnCommentDescriptionChanged();
    partial void OnCommentStatusChanging(int value);
    partial void OnCommentStatusChanged();
    partial void OnCommentPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommentPostedDateChanged();
    #endregion
		
		public Tbl_DealComment()
		{
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			this._Tbl_Deal = default(EntityRef<Tbl_Deal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealCommentsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealCommentsID
		{
			get
			{
				return this._DealCommentsID;
			}
			set
			{
				if ((this._DealCommentsID != value))
				{
					this.OnDealCommentsIDChanging(value);
					this.SendPropertyChanging();
					this._DealCommentsID = value;
					this.SendPropertyChanged("DealCommentsID");
					this.OnDealCommentsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealID", DbType="Int")]
		public System.Nullable<int> DealID
		{
			get
			{
				return this._DealID;
			}
			set
			{
				if ((this._DealID != value))
				{
					if (this._Tbl_Deal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealIDChanging(value);
					this.SendPropertyChanging();
					this._DealID = value;
					this.SendPropertyChanged("DealID");
					this.OnDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int")]
		public System.Nullable<int> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommentDescription
		{
			get
			{
				return this._CommentDescription;
			}
			set
			{
				if ((this._CommentDescription != value))
				{
					this.OnCommentDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CommentDescription = value;
					this.SendPropertyChanged("CommentDescription");
					this.OnCommentDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentStatus", DbType="Int NOT NULL")]
		public int CommentStatus
		{
			get
			{
				return this._CommentStatus;
			}
			set
			{
				if ((this._CommentStatus != value))
				{
					this.OnCommentStatusChanging(value);
					this.SendPropertyChanging();
					this._CommentStatus = value;
					this.SendPropertyChanged("CommentStatus");
					this.OnCommentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentPostedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommentPostedDate
		{
			get
			{
				return this._CommentPostedDate;
			}
			set
			{
				if ((this._CommentPostedDate != value))
				{
					this.OnCommentPostedDateChanging(value);
					this.SendPropertyChanging();
					this._CommentPostedDate = value;
					this.SendPropertyChanged("CommentPostedDate");
					this.OnCommentPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_DealComment", Storage="_Tbl_UserAccess", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_DealComments.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_DealComments.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Deal_Tbl_DealComment", Storage="_Tbl_Deal", ThisKey="DealID", OtherKey="DealID", IsForeignKey=true)]
		public Tbl_Deal Tbl_Deal
		{
			get
			{
				return this._Tbl_Deal.Entity;
			}
			set
			{
				Tbl_Deal previousValue = this._Tbl_Deal.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Deal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Deal.Entity = null;
						previousValue.Tbl_DealComments.Remove(this);
					}
					this._Tbl_Deal.Entity = value;
					if ((value != null))
					{
						value.Tbl_DealComments.Add(this);
						this._DealID = value.DealID;
					}
					else
					{
						this._DealID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_Deal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_DealCategories")]
	public partial class Tbl_DealCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealCategoryId;
		
		private string _DealCategoryName;
		
		private EntitySet<Tbl_Voucher> _Tbl_Vouchers;
		
		private EntitySet<Tbl_Deal> _Tbl_Deals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealCategoryIdChanging(int value);
    partial void OnDealCategoryIdChanged();
    partial void OnDealCategoryNameChanging(string value);
    partial void OnDealCategoryNameChanged();
    #endregion
		
		public Tbl_DealCategory()
		{
			this._Tbl_Vouchers = new EntitySet<Tbl_Voucher>(new Action<Tbl_Voucher>(this.attach_Tbl_Vouchers), new Action<Tbl_Voucher>(this.detach_Tbl_Vouchers));
			this._Tbl_Deals = new EntitySet<Tbl_Deal>(new Action<Tbl_Deal>(this.attach_Tbl_Deals), new Action<Tbl_Deal>(this.detach_Tbl_Deals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealCategoryId
		{
			get
			{
				return this._DealCategoryId;
			}
			set
			{
				if ((this._DealCategoryId != value))
				{
					this.OnDealCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealCategoryId = value;
					this.SendPropertyChanged("DealCategoryId");
					this.OnDealCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealCategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DealCategoryName
		{
			get
			{
				return this._DealCategoryName;
			}
			set
			{
				if ((this._DealCategoryName != value))
				{
					this.OnDealCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._DealCategoryName = value;
					this.SendPropertyChanged("DealCategoryName");
					this.OnDealCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealCategory_Tbl_Voucher", Storage="_Tbl_Vouchers", ThisKey="DealCategoryId", OtherKey="DealCategoryId")]
		public EntitySet<Tbl_Voucher> Tbl_Vouchers
		{
			get
			{
				return this._Tbl_Vouchers;
			}
			set
			{
				this._Tbl_Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealCategory_Tbl_Deal", Storage="_Tbl_Deals", ThisKey="DealCategoryId", OtherKey="DealCategoryId")]
		public EntitySet<Tbl_Deal> Tbl_Deals
		{
			get
			{
				return this._Tbl_Deals;
			}
			set
			{
				this._Tbl_Deals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Vouchers(Tbl_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealCategory = this;
		}
		
		private void detach_Tbl_Vouchers(Tbl_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealCategory = null;
		}
		
		private void attach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealCategory = this;
		}
		
		private void detach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Vouchers")]
	public partial class Tbl_Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoucherID;
		
		private string _VoucherCode;
		
		private string _VoucherInstructions;
		
		private bool _VoucherStatus;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _VoucherPostedDate;
		
		private decimal _DiscountRate;
		
		private System.Nullable<int> _MinimumSpend;
		
		private int _Degree;
		
		private System.Nullable<int> _ApprovedBy;
		
		private string _VoucherURL;
		
		private string _VoucherTags;
		
		private System.Nullable<int> _VoucherCompanyID;
		
		private int _DealCategoryId;
		
		private EntitySet<Tbl_VoucherComment> _Tbl_VoucherComments;
		
		private EntityRef<Tbl_DealCategory> _Tbl_DealCategory;
		
		private EntityRef<Tbl_VoucherCompany> _Tbl_VoucherCompany;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoucherIDChanging(int value);
    partial void OnVoucherIDChanged();
    partial void OnVoucherCodeChanging(string value);
    partial void OnVoucherCodeChanged();
    partial void OnVoucherInstructionsChanging(string value);
    partial void OnVoucherInstructionsChanged();
    partial void OnVoucherStatusChanging(bool value);
    partial void OnVoucherStatusChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnVoucherPostedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoucherPostedDateChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnMinimumSpendChanging(System.Nullable<int> value);
    partial void OnMinimumSpendChanged();
    partial void OnDegreeChanging(int value);
    partial void OnDegreeChanged();
    partial void OnApprovedByChanging(System.Nullable<int> value);
    partial void OnApprovedByChanged();
    partial void OnVoucherURLChanging(string value);
    partial void OnVoucherURLChanged();
    partial void OnVoucherTagsChanging(string value);
    partial void OnVoucherTagsChanged();
    partial void OnVoucherCompanyIDChanging(System.Nullable<int> value);
    partial void OnVoucherCompanyIDChanged();
    partial void OnDealCategoryIdChanging(int value);
    partial void OnDealCategoryIdChanged();
    #endregion
		
		public Tbl_Voucher()
		{
			this._Tbl_VoucherComments = new EntitySet<Tbl_VoucherComment>(new Action<Tbl_VoucherComment>(this.attach_Tbl_VoucherComments), new Action<Tbl_VoucherComment>(this.detach_Tbl_VoucherComments));
			this._Tbl_DealCategory = default(EntityRef<Tbl_DealCategory>);
			this._Tbl_VoucherCompany = default(EntityRef<Tbl_VoucherCompany>);
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VoucherID
		{
			get
			{
				return this._VoucherID;
			}
			set
			{
				if ((this._VoucherID != value))
				{
					this.OnVoucherIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherID = value;
					this.SendPropertyChanged("VoucherID");
					this.OnVoucherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VoucherCode
		{
			get
			{
				return this._VoucherCode;
			}
			set
			{
				if ((this._VoucherCode != value))
				{
					this.OnVoucherCodeChanging(value);
					this.SendPropertyChanging();
					this._VoucherCode = value;
					this.SendPropertyChanged("VoucherCode");
					this.OnVoucherCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherInstructions", DbType="VarChar(500)")]
		public string VoucherInstructions
		{
			get
			{
				return this._VoucherInstructions;
			}
			set
			{
				if ((this._VoucherInstructions != value))
				{
					this.OnVoucherInstructionsChanging(value);
					this.SendPropertyChanging();
					this._VoucherInstructions = value;
					this.SendPropertyChanged("VoucherInstructions");
					this.OnVoucherInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherStatus", DbType="Bit NOT NULL")]
		public bool VoucherStatus
		{
			get
			{
				return this._VoucherStatus;
			}
			set
			{
				if ((this._VoucherStatus != value))
				{
					this.OnVoucherStatusChanging(value);
					this.SendPropertyChanging();
					this._VoucherStatus = value;
					this.SendPropertyChanged("VoucherStatus");
					this.OnVoucherStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherPostedDate", DbType="Date")]
		public System.Nullable<System.DateTime> VoucherPostedDate
		{
			get
			{
				return this._VoucherPostedDate;
			}
			set
			{
				if ((this._VoucherPostedDate != value))
				{
					this.OnVoucherPostedDateChanging(value);
					this.SendPropertyChanging();
					this._VoucherPostedDate = value;
					this.SendPropertyChanged("VoucherPostedDate");
					this.OnVoucherPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,0) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumSpend", DbType="Int")]
		public System.Nullable<int> MinimumSpend
		{
			get
			{
				return this._MinimumSpend;
			}
			set
			{
				if ((this._MinimumSpend != value))
				{
					this.OnMinimumSpendChanging(value);
					this.SendPropertyChanging();
					this._MinimumSpend = value;
					this.SendPropertyChanged("MinimumSpend");
					this.OnMinimumSpendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="Int NOT NULL")]
		public int Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int")]
		public System.Nullable<int> ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherURL", DbType="VarChar(500)")]
		public string VoucherURL
		{
			get
			{
				return this._VoucherURL;
			}
			set
			{
				if ((this._VoucherURL != value))
				{
					this.OnVoucherURLChanging(value);
					this.SendPropertyChanging();
					this._VoucherURL = value;
					this.SendPropertyChanged("VoucherURL");
					this.OnVoucherURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherTags", DbType="VarChar(250)")]
		public string VoucherTags
		{
			get
			{
				return this._VoucherTags;
			}
			set
			{
				if ((this._VoucherTags != value))
				{
					this.OnVoucherTagsChanging(value);
					this.SendPropertyChanging();
					this._VoucherTags = value;
					this.SendPropertyChanged("VoucherTags");
					this.OnVoucherTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherCompanyID", DbType="Int")]
		public System.Nullable<int> VoucherCompanyID
		{
			get
			{
				return this._VoucherCompanyID;
			}
			set
			{
				if ((this._VoucherCompanyID != value))
				{
					if (this._Tbl_VoucherCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VoucherCompanyID = value;
					this.SendPropertyChanged("VoucherCompanyID");
					this.OnVoucherCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealCategoryId", DbType="Int NOT NULL")]
		public int DealCategoryId
		{
			get
			{
				return this._DealCategoryId;
			}
			set
			{
				if ((this._DealCategoryId != value))
				{
					if (this._Tbl_DealCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealCategoryId = value;
					this.SendPropertyChanged("DealCategoryId");
					this.OnDealCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Voucher_Tbl_VoucherComment", Storage="_Tbl_VoucherComments", ThisKey="VoucherID", OtherKey="VoucherID")]
		public EntitySet<Tbl_VoucherComment> Tbl_VoucherComments
		{
			get
			{
				return this._Tbl_VoucherComments;
			}
			set
			{
				this._Tbl_VoucherComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealCategory_Tbl_Voucher", Storage="_Tbl_DealCategory", ThisKey="DealCategoryId", OtherKey="DealCategoryId", IsForeignKey=true)]
		public Tbl_DealCategory Tbl_DealCategory
		{
			get
			{
				return this._Tbl_DealCategory.Entity;
			}
			set
			{
				Tbl_DealCategory previousValue = this._Tbl_DealCategory.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_DealCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_DealCategory.Entity = null;
						previousValue.Tbl_Vouchers.Remove(this);
					}
					this._Tbl_DealCategory.Entity = value;
					if ((value != null))
					{
						value.Tbl_Vouchers.Add(this);
						this._DealCategoryId = value.DealCategoryId;
					}
					else
					{
						this._DealCategoryId = default(int);
					}
					this.SendPropertyChanged("Tbl_DealCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_VoucherCompany_Tbl_Voucher", Storage="_Tbl_VoucherCompany", ThisKey="VoucherCompanyID", OtherKey="VoucherCompanyID", IsForeignKey=true)]
		public Tbl_VoucherCompany Tbl_VoucherCompany
		{
			get
			{
				return this._Tbl_VoucherCompany.Entity;
			}
			set
			{
				Tbl_VoucherCompany previousValue = this._Tbl_VoucherCompany.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_VoucherCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_VoucherCompany.Entity = null;
						previousValue.Tbl_Vouchers.Remove(this);
					}
					this._Tbl_VoucherCompany.Entity = value;
					if ((value != null))
					{
						value.Tbl_Vouchers.Add(this);
						this._VoucherCompanyID = value.VoucherCompanyID;
					}
					else
					{
						this._VoucherCompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_VoucherCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_Voucher", Storage="_Tbl_UserAccess", ThisKey="ApprovedBy", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_Vouchers.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_Vouchers.Add(this);
						this._ApprovedBy = value.UserAccessID;
					}
					else
					{
						this._ApprovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_VoucherComments(Tbl_VoucherComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Voucher = this;
		}
		
		private void detach_Tbl_VoucherComments(Tbl_VoucherComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_DealPriceCategories")]
	public partial class Tbl_DealPriceCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealPriceCategoryId;
		
		private int _StartPrice;
		
		private int _EndPrice;
		
		private EntitySet<Tbl_Deal> _Tbl_Deals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealPriceCategoryIdChanging(int value);
    partial void OnDealPriceCategoryIdChanged();
    partial void OnStartPriceChanging(int value);
    partial void OnStartPriceChanged();
    partial void OnEndPriceChanging(int value);
    partial void OnEndPriceChanged();
    #endregion
		
		public Tbl_DealPriceCategory()
		{
			this._Tbl_Deals = new EntitySet<Tbl_Deal>(new Action<Tbl_Deal>(this.attach_Tbl_Deals), new Action<Tbl_Deal>(this.detach_Tbl_Deals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealPriceCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealPriceCategoryId
		{
			get
			{
				return this._DealPriceCategoryId;
			}
			set
			{
				if ((this._DealPriceCategoryId != value))
				{
					this.OnDealPriceCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealPriceCategoryId = value;
					this.SendPropertyChanged("DealPriceCategoryId");
					this.OnDealPriceCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPrice", DbType="Int NOT NULL")]
		public int StartPrice
		{
			get
			{
				return this._StartPrice;
			}
			set
			{
				if ((this._StartPrice != value))
				{
					this.OnStartPriceChanging(value);
					this.SendPropertyChanging();
					this._StartPrice = value;
					this.SendPropertyChanged("StartPrice");
					this.OnStartPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPrice", DbType="Int NOT NULL")]
		public int EndPrice
		{
			get
			{
				return this._EndPrice;
			}
			set
			{
				if ((this._EndPrice != value))
				{
					this.OnEndPriceChanging(value);
					this.SendPropertyChanging();
					this._EndPrice = value;
					this.SendPropertyChanged("EndPrice");
					this.OnEndPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealPriceCategory_Tbl_Deal", Storage="_Tbl_Deals", ThisKey="DealPriceCategoryId", OtherKey="DealPriceCategoryId")]
		public EntitySet<Tbl_Deal> Tbl_Deals
		{
			get
			{
				return this._Tbl_Deals;
			}
			set
			{
				this._Tbl_Deals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealPriceCategory = this;
		}
		
		private void detach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_DealPriceCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_ApplicationLog")]
	public partial class Tbl_ApplicationLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Logid;
		
		private string _LogMessage;
		
		private string _LogMessageType;
		
		private System.Nullable<System.DateTime> _LoggedDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogidChanging(int value);
    partial void OnLogidChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnLogMessageTypeChanging(string value);
    partial void OnLogMessageTypeChanged();
    partial void OnLoggedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLoggedDateTimeChanged();
    #endregion
		
		public Tbl_ApplicationLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Logid
		{
			get
			{
				return this._Logid;
			}
			set
			{
				if ((this._Logid != value))
				{
					this.OnLogidChanging(value);
					this.SendPropertyChanging();
					this._Logid = value;
					this.SendPropertyChanged("Logid");
					this.OnLogidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessageType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string LogMessageType
		{
			get
			{
				return this._LogMessageType;
			}
			set
			{
				if ((this._LogMessageType != value))
				{
					this.OnLogMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._LogMessageType = value;
					this.SendPropertyChanged("LogMessageType");
					this.OnLogMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LoggedDateTime
		{
			get
			{
				return this._LoggedDateTime;
			}
			set
			{
				if ((this._LoggedDateTime != value))
				{
					this.OnLoggedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LoggedDateTime = value;
					this.SendPropertyChanged("LoggedDateTime");
					this.OnLoggedDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_UserProfile")]
	public partial class Tbl_UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserProfileID;
		
		private System.Nullable<int> _UserAccessID;
		
		private int _DealsCount;
		
		private int _CommentsCount;
		
		private int _VouchersCount;
		
		private System.Nullable<int> _BadgeID;
		
		private EntityRef<Tbl_Badge> _Tbl_Badge;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserProfileIDChanging(int value);
    partial void OnUserProfileIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<int> value);
    partial void OnUserAccessIDChanged();
    partial void OnDealsCountChanging(int value);
    partial void OnDealsCountChanged();
    partial void OnCommentsCountChanging(int value);
    partial void OnCommentsCountChanged();
    partial void OnVouchersCountChanging(int value);
    partial void OnVouchersCountChanged();
    partial void OnBadgeIDChanging(System.Nullable<int> value);
    partial void OnBadgeIDChanged();
    #endregion
		
		public Tbl_UserProfile()
		{
			this._Tbl_Badge = default(EntityRef<Tbl_Badge>);
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserProfileID
		{
			get
			{
				return this._UserProfileID;
			}
			set
			{
				if ((this._UserProfileID != value))
				{
					this.OnUserProfileIDChanging(value);
					this.SendPropertyChanging();
					this._UserProfileID = value;
					this.SendPropertyChanged("UserProfileID");
					this.OnUserProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int")]
		public System.Nullable<int> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealsCount", DbType="Int NOT NULL")]
		public int DealsCount
		{
			get
			{
				return this._DealsCount;
			}
			set
			{
				if ((this._DealsCount != value))
				{
					this.OnDealsCountChanging(value);
					this.SendPropertyChanging();
					this._DealsCount = value;
					this.SendPropertyChanged("DealsCount");
					this.OnDealsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentsCount", DbType="Int NOT NULL")]
		public int CommentsCount
		{
			get
			{
				return this._CommentsCount;
			}
			set
			{
				if ((this._CommentsCount != value))
				{
					this.OnCommentsCountChanging(value);
					this.SendPropertyChanging();
					this._CommentsCount = value;
					this.SendPropertyChanged("CommentsCount");
					this.OnCommentsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VouchersCount", DbType="Int NOT NULL")]
		public int VouchersCount
		{
			get
			{
				return this._VouchersCount;
			}
			set
			{
				if ((this._VouchersCount != value))
				{
					this.OnVouchersCountChanging(value);
					this.SendPropertyChanging();
					this._VouchersCount = value;
					this.SendPropertyChanged("VouchersCount");
					this.OnVouchersCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeID", DbType="Int")]
		public System.Nullable<int> BadgeID
		{
			get
			{
				return this._BadgeID;
			}
			set
			{
				if ((this._BadgeID != value))
				{
					if (this._Tbl_Badge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBadgeIDChanging(value);
					this.SendPropertyChanging();
					this._BadgeID = value;
					this.SendPropertyChanged("BadgeID");
					this.OnBadgeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Badge_Tbl_UserProfile", Storage="_Tbl_Badge", ThisKey="BadgeID", OtherKey="BadgeID", IsForeignKey=true)]
		public Tbl_Badge Tbl_Badge
		{
			get
			{
				return this._Tbl_Badge.Entity;
			}
			set
			{
				Tbl_Badge previousValue = this._Tbl_Badge.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Badge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Badge.Entity = null;
						previousValue.Tbl_UserProfiles.Remove(this);
					}
					this._Tbl_Badge.Entity = value;
					if ((value != null))
					{
						value.Tbl_UserProfiles.Add(this);
						this._BadgeID = value.BadgeID;
					}
					else
					{
						this._BadgeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_Badge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_UserProfile", Storage="_Tbl_UserAccess", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_UserProfiles.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_UserProfiles.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Statastics")]
	public partial class Tbl_Statastic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatId;
		
		private int _NumberOfUsers;
		
		private int _NumberOfDeals;
		
		private int _NumberOfActiveDeals;
		
		private int _NumberOfInActiveDeals;
		
		private int _NumberOfVouchers;
		
		private int _NumberOfActiveVouchers;
		
		private int _NumberOfInActiveVouchers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatIdChanging(int value);
    partial void OnStatIdChanged();
    partial void OnNumberOfUsersChanging(int value);
    partial void OnNumberOfUsersChanged();
    partial void OnNumberOfDealsChanging(int value);
    partial void OnNumberOfDealsChanged();
    partial void OnNumberOfActiveDealsChanging(int value);
    partial void OnNumberOfActiveDealsChanged();
    partial void OnNumberOfInActiveDealsChanging(int value);
    partial void OnNumberOfInActiveDealsChanged();
    partial void OnNumberOfVouchersChanging(int value);
    partial void OnNumberOfVouchersChanged();
    partial void OnNumberOfActiveVouchersChanging(int value);
    partial void OnNumberOfActiveVouchersChanged();
    partial void OnNumberOfInActiveVouchersChanging(int value);
    partial void OnNumberOfInActiveVouchersChanged();
    #endregion
		
		public Tbl_Statastic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatId
		{
			get
			{
				return this._StatId;
			}
			set
			{
				if ((this._StatId != value))
				{
					this.OnStatIdChanging(value);
					this.SendPropertyChanging();
					this._StatId = value;
					this.SendPropertyChanged("StatId");
					this.OnStatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfUsers", DbType="Int NOT NULL")]
		public int NumberOfUsers
		{
			get
			{
				return this._NumberOfUsers;
			}
			set
			{
				if ((this._NumberOfUsers != value))
				{
					this.OnNumberOfUsersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfUsers = value;
					this.SendPropertyChanged("NumberOfUsers");
					this.OnNumberOfUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDeals", DbType="Int NOT NULL")]
		public int NumberOfDeals
		{
			get
			{
				return this._NumberOfDeals;
			}
			set
			{
				if ((this._NumberOfDeals != value))
				{
					this.OnNumberOfDealsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDeals = value;
					this.SendPropertyChanged("NumberOfDeals");
					this.OnNumberOfDealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfActiveDeals", DbType="Int NOT NULL")]
		public int NumberOfActiveDeals
		{
			get
			{
				return this._NumberOfActiveDeals;
			}
			set
			{
				if ((this._NumberOfActiveDeals != value))
				{
					this.OnNumberOfActiveDealsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfActiveDeals = value;
					this.SendPropertyChanged("NumberOfActiveDeals");
					this.OnNumberOfActiveDealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfInActiveDeals", DbType="Int NOT NULL")]
		public int NumberOfInActiveDeals
		{
			get
			{
				return this._NumberOfInActiveDeals;
			}
			set
			{
				if ((this._NumberOfInActiveDeals != value))
				{
					this.OnNumberOfInActiveDealsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfInActiveDeals = value;
					this.SendPropertyChanged("NumberOfInActiveDeals");
					this.OnNumberOfInActiveDealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfVouchers", DbType="Int NOT NULL")]
		public int NumberOfVouchers
		{
			get
			{
				return this._NumberOfVouchers;
			}
			set
			{
				if ((this._NumberOfVouchers != value))
				{
					this.OnNumberOfVouchersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfVouchers = value;
					this.SendPropertyChanged("NumberOfVouchers");
					this.OnNumberOfVouchersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfActiveVouchers", DbType="Int NOT NULL")]
		public int NumberOfActiveVouchers
		{
			get
			{
				return this._NumberOfActiveVouchers;
			}
			set
			{
				if ((this._NumberOfActiveVouchers != value))
				{
					this.OnNumberOfActiveVouchersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfActiveVouchers = value;
					this.SendPropertyChanged("NumberOfActiveVouchers");
					this.OnNumberOfActiveVouchersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfInActiveVouchers", DbType="Int NOT NULL")]
		public int NumberOfInActiveVouchers
		{
			get
			{
				return this._NumberOfInActiveVouchers;
			}
			set
			{
				if ((this._NumberOfInActiveVouchers != value))
				{
					this.OnNumberOfInActiveVouchersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfInActiveVouchers = value;
					this.SendPropertyChanged("NumberOfInActiveVouchers");
					this.OnNumberOfInActiveVouchersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_UserPersonalDetails")]
	public partial class Tbl_UserPersonalDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserPersonalDetailsID;
		
		private System.Nullable<int> _UserAccessID;
		
		private string _UserAddress;
		
		private string _MobileNumber;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserPersonalDetailsIDChanging(int value);
    partial void OnUserPersonalDetailsIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<int> value);
    partial void OnUserAccessIDChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    #endregion
		
		public Tbl_UserPersonalDetail()
		{
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPersonalDetailsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserPersonalDetailsID
		{
			get
			{
				return this._UserPersonalDetailsID;
			}
			set
			{
				if ((this._UserPersonalDetailsID != value))
				{
					this.OnUserPersonalDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._UserPersonalDetailsID = value;
					this.SendPropertyChanged("UserPersonalDetailsID");
					this.OnUserPersonalDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int")]
		public System.Nullable<int> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="VarChar(250)")]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(15)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_UserPersonalDetail", Storage="_Tbl_UserAccess", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_UserPersonalDetails.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_UserPersonalDetails.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_UserAccess")]
	public partial class Tbl_UserAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAccessID;
		
		private string _UserLoginName;
		
		private string _UserPassword;
		
		private string _Email;
		
		private bool _IsUserValid;
		
		private System.Nullable<System.DateTime> _LastLoginDateTime;
		
		private System.Nullable<int> _UserRoleID;
		
		private bool _NowOnline;
		
		private System.DateTime _DateOfBirth;
		
		private string _UserPicture;
		
		private EntitySet<Tbl_AskThread> _Tbl_AskThreads;
		
		private EntitySet<Tbl_AskThread> _Tbl_AskThreads1;
		
		private EntitySet<Tbl_AskThreadResponse> _Tbl_AskThreadResponses;
		
		private EntitySet<Tbl_AskThreadResponse> _Tbl_AskThreadResponses1;
		
		private EntitySet<Tbl_VoucherComment> _Tbl_VoucherComments;
		
		private EntitySet<Tbl_DealComment> _Tbl_DealComments;
		
		private EntitySet<Tbl_Voucher> _Tbl_Vouchers;
		
		private EntitySet<Tbl_UserProfile> _Tbl_UserProfiles;
		
		private EntitySet<Tbl_UserPersonalDetail> _Tbl_UserPersonalDetails;
		
		private EntitySet<Tbl_Deal> _Tbl_Deals;
		
		private EntitySet<Tbl_Deal> _Tbl_Deals1;
		
		private EntityRef<Tbl_UserRole> _Tbl_UserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAccessIDChanging(int value);
    partial void OnUserAccessIDChanged();
    partial void OnUserLoginNameChanging(string value);
    partial void OnUserLoginNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsUserValidChanging(bool value);
    partial void OnIsUserValidChanged();
    partial void OnLastLoginDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateTimeChanged();
    partial void OnUserRoleIDChanging(System.Nullable<int> value);
    partial void OnUserRoleIDChanged();
    partial void OnNowOnlineChanging(bool value);
    partial void OnNowOnlineChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnUserPictureChanging(string value);
    partial void OnUserPictureChanged();
    #endregion
		
		public Tbl_UserAccess()
		{
			this._Tbl_AskThreads = new EntitySet<Tbl_AskThread>(new Action<Tbl_AskThread>(this.attach_Tbl_AskThreads), new Action<Tbl_AskThread>(this.detach_Tbl_AskThreads));
			this._Tbl_AskThreads1 = new EntitySet<Tbl_AskThread>(new Action<Tbl_AskThread>(this.attach_Tbl_AskThreads1), new Action<Tbl_AskThread>(this.detach_Tbl_AskThreads1));
			this._Tbl_AskThreadResponses = new EntitySet<Tbl_AskThreadResponse>(new Action<Tbl_AskThreadResponse>(this.attach_Tbl_AskThreadResponses), new Action<Tbl_AskThreadResponse>(this.detach_Tbl_AskThreadResponses));
			this._Tbl_AskThreadResponses1 = new EntitySet<Tbl_AskThreadResponse>(new Action<Tbl_AskThreadResponse>(this.attach_Tbl_AskThreadResponses1), new Action<Tbl_AskThreadResponse>(this.detach_Tbl_AskThreadResponses1));
			this._Tbl_VoucherComments = new EntitySet<Tbl_VoucherComment>(new Action<Tbl_VoucherComment>(this.attach_Tbl_VoucherComments), new Action<Tbl_VoucherComment>(this.detach_Tbl_VoucherComments));
			this._Tbl_DealComments = new EntitySet<Tbl_DealComment>(new Action<Tbl_DealComment>(this.attach_Tbl_DealComments), new Action<Tbl_DealComment>(this.detach_Tbl_DealComments));
			this._Tbl_Vouchers = new EntitySet<Tbl_Voucher>(new Action<Tbl_Voucher>(this.attach_Tbl_Vouchers), new Action<Tbl_Voucher>(this.detach_Tbl_Vouchers));
			this._Tbl_UserProfiles = new EntitySet<Tbl_UserProfile>(new Action<Tbl_UserProfile>(this.attach_Tbl_UserProfiles), new Action<Tbl_UserProfile>(this.detach_Tbl_UserProfiles));
			this._Tbl_UserPersonalDetails = new EntitySet<Tbl_UserPersonalDetail>(new Action<Tbl_UserPersonalDetail>(this.attach_Tbl_UserPersonalDetails), new Action<Tbl_UserPersonalDetail>(this.detach_Tbl_UserPersonalDetails));
			this._Tbl_Deals = new EntitySet<Tbl_Deal>(new Action<Tbl_Deal>(this.attach_Tbl_Deals), new Action<Tbl_Deal>(this.detach_Tbl_Deals));
			this._Tbl_Deals1 = new EntitySet<Tbl_Deal>(new Action<Tbl_Deal>(this.attach_Tbl_Deals1), new Action<Tbl_Deal>(this.detach_Tbl_Deals1));
			this._Tbl_UserRole = default(EntityRef<Tbl_UserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLoginName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserLoginName
		{
			get
			{
				return this._UserLoginName;
			}
			set
			{
				if ((this._UserLoginName != value))
				{
					this.OnUserLoginNameChanging(value);
					this.SendPropertyChanging();
					this._UserLoginName = value;
					this.SendPropertyChanged("UserLoginName");
					this.OnUserLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserValid", DbType="Bit NOT NULL")]
		public bool IsUserValid
		{
			get
			{
				return this._IsUserValid;
			}
			set
			{
				if ((this._IsUserValid != value))
				{
					this.OnIsUserValidChanging(value);
					this.SendPropertyChanging();
					this._IsUserValid = value;
					this.SendPropertyChanged("IsUserValid");
					this.OnIsUserValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDateTime
		{
			get
			{
				return this._LastLoginDateTime;
			}
			set
			{
				if ((this._LastLoginDateTime != value))
				{
					this.OnLastLoginDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDateTime = value;
					this.SendPropertyChanged("LastLoginDateTime");
					this.OnLastLoginDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleID", DbType="Int")]
		public System.Nullable<int> UserRoleID
		{
			get
			{
				return this._UserRoleID;
			}
			set
			{
				if ((this._UserRoleID != value))
				{
					if (this._Tbl_UserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._UserRoleID = value;
					this.SendPropertyChanged("UserRoleID");
					this.OnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowOnline", DbType="Bit NOT NULL")]
		public bool NowOnline
		{
			get
			{
				return this._NowOnline;
			}
			set
			{
				if ((this._NowOnline != value))
				{
					this.OnNowOnlineChanging(value);
					this.SendPropertyChanging();
					this._NowOnline = value;
					this.SendPropertyChanged("NowOnline");
					this.OnNowOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPicture", DbType="VarChar(50)")]
		public string UserPicture
		{
			get
			{
				return this._UserPicture;
			}
			set
			{
				if ((this._UserPicture != value))
				{
					this.OnUserPictureChanging(value);
					this.SendPropertyChanging();
					this._UserPicture = value;
					this.SendPropertyChanged("UserPicture");
					this.OnUserPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThread", Storage="_Tbl_AskThreads", ThisKey="UserAccessID", OtherKey="ApprovedBy")]
		public EntitySet<Tbl_AskThread> Tbl_AskThreads
		{
			get
			{
				return this._Tbl_AskThreads;
			}
			set
			{
				this._Tbl_AskThreads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThread1", Storage="_Tbl_AskThreads1", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_AskThread> Tbl_AskThreads1
		{
			get
			{
				return this._Tbl_AskThreads1;
			}
			set
			{
				this._Tbl_AskThreads1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThreadResponse", Storage="_Tbl_AskThreadResponses", ThisKey="UserAccessID", OtherKey="ApprovedBy")]
		public EntitySet<Tbl_AskThreadResponse> Tbl_AskThreadResponses
		{
			get
			{
				return this._Tbl_AskThreadResponses;
			}
			set
			{
				this._Tbl_AskThreadResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_AskThreadResponse1", Storage="_Tbl_AskThreadResponses1", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_AskThreadResponse> Tbl_AskThreadResponses1
		{
			get
			{
				return this._Tbl_AskThreadResponses1;
			}
			set
			{
				this._Tbl_AskThreadResponses1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_VoucherComment", Storage="_Tbl_VoucherComments", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_VoucherComment> Tbl_VoucherComments
		{
			get
			{
				return this._Tbl_VoucherComments;
			}
			set
			{
				this._Tbl_VoucherComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_DealComment", Storage="_Tbl_DealComments", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_DealComment> Tbl_DealComments
		{
			get
			{
				return this._Tbl_DealComments;
			}
			set
			{
				this._Tbl_DealComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_Voucher", Storage="_Tbl_Vouchers", ThisKey="UserAccessID", OtherKey="ApprovedBy")]
		public EntitySet<Tbl_Voucher> Tbl_Vouchers
		{
			get
			{
				return this._Tbl_Vouchers;
			}
			set
			{
				this._Tbl_Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_UserProfile", Storage="_Tbl_UserProfiles", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_UserProfile> Tbl_UserProfiles
		{
			get
			{
				return this._Tbl_UserProfiles;
			}
			set
			{
				this._Tbl_UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_UserPersonalDetail", Storage="_Tbl_UserPersonalDetails", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_UserPersonalDetail> Tbl_UserPersonalDetails
		{
			get
			{
				return this._Tbl_UserPersonalDetails;
			}
			set
			{
				this._Tbl_UserPersonalDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_Deal", Storage="_Tbl_Deals", ThisKey="UserAccessID", OtherKey="ApprovedBy")]
		public EntitySet<Tbl_Deal> Tbl_Deals
		{
			get
			{
				return this._Tbl_Deals;
			}
			set
			{
				this._Tbl_Deals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_Deal1", Storage="_Tbl_Deals1", ThisKey="UserAccessID", OtherKey="UserAccessID")]
		public EntitySet<Tbl_Deal> Tbl_Deals1
		{
			get
			{
				return this._Tbl_Deals1;
			}
			set
			{
				this._Tbl_Deals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserRole_Tbl_UserAccess", Storage="_Tbl_UserRole", ThisKey="UserRoleID", OtherKey="UserRoleID", IsForeignKey=true)]
		public Tbl_UserRole Tbl_UserRole
		{
			get
			{
				return this._Tbl_UserRole.Entity;
			}
			set
			{
				Tbl_UserRole previousValue = this._Tbl_UserRole.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserRole.Entity = null;
						previousValue.Tbl_UserAccesses.Remove(this);
					}
					this._Tbl_UserRole.Entity = value;
					if ((value != null))
					{
						value.Tbl_UserAccesses.Add(this);
						this._UserRoleID = value.UserRoleID;
					}
					else
					{
						this._UserRoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_UserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_AskThreads(Tbl_AskThread entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_AskThreads(Tbl_AskThread entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_AskThreads1(Tbl_AskThread entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess1 = this;
		}
		
		private void detach_Tbl_AskThreads1(Tbl_AskThread entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess1 = null;
		}
		
		private void attach_Tbl_AskThreadResponses(Tbl_AskThreadResponse entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_AskThreadResponses(Tbl_AskThreadResponse entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_AskThreadResponses1(Tbl_AskThreadResponse entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess1 = this;
		}
		
		private void detach_Tbl_AskThreadResponses1(Tbl_AskThreadResponse entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess1 = null;
		}
		
		private void attach_Tbl_VoucherComments(Tbl_VoucherComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_VoucherComments(Tbl_VoucherComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_DealComments(Tbl_DealComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_DealComments(Tbl_DealComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_Vouchers(Tbl_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_Vouchers(Tbl_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_UserProfiles(Tbl_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_UserProfiles(Tbl_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_UserPersonalDetails(Tbl_UserPersonalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_UserPersonalDetails(Tbl_UserPersonalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = this;
		}
		
		private void detach_Tbl_Deals(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess = null;
		}
		
		private void attach_Tbl_Deals1(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess1 = this;
		}
		
		private void detach_Tbl_Deals1(Tbl_Deal entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_UserAccess1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Deals")]
	public partial class Tbl_Deal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealID;
		
		private int _UserAccessID;
		
		private string _DealURL;
		
		private int _DealStatus;
		
		private decimal _DealPrice;
		
		private string _DealTopicName;
		
		private string _DealDescription;
		
		private int _DealDegree;
		
		private System.DateTime _DealPostedDate;
		
		private int _ApprovedBy;
		
		private int _DealType;
		
		private string _DealPicture;
		
		private System.DateTime _DealStartDate;
		
		private System.DateTime _DealEndDate;
		
		private int _DealCategoryId;
		
		private int _DealPriceCategoryId;
		
		private System.Data.Linq.Binary _DealImageData;
		
		private EntitySet<Tbl_DealComment> _Tbl_DealComments;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess;
		
		private EntityRef<Tbl_DealCategory> _Tbl_DealCategory;
		
		private EntityRef<Tbl_DealPriceCategory> _Tbl_DealPriceCategory;
		
		private EntityRef<Tbl_DealType> _Tbl_DealType;
		
		private EntityRef<Tbl_UserAccess> _Tbl_UserAccess1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealIDChanging(int value);
    partial void OnDealIDChanged();
    partial void OnUserAccessIDChanging(int value);
    partial void OnUserAccessIDChanged();
    partial void OnDealURLChanging(string value);
    partial void OnDealURLChanged();
    partial void OnDealStatusChanging(int value);
    partial void OnDealStatusChanged();
    partial void OnDealPriceChanging(decimal value);
    partial void OnDealPriceChanged();
    partial void OnDealTopicNameChanging(string value);
    partial void OnDealTopicNameChanged();
    partial void OnDealDescriptionChanging(string value);
    partial void OnDealDescriptionChanged();
    partial void OnDealDegreeChanging(int value);
    partial void OnDealDegreeChanged();
    partial void OnDealPostedDateChanging(System.DateTime value);
    partial void OnDealPostedDateChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnDealTypeChanging(int value);
    partial void OnDealTypeChanged();
    partial void OnDealPictureChanging(string value);
    partial void OnDealPictureChanged();
    partial void OnDealStartDateChanging(System.DateTime value);
    partial void OnDealStartDateChanged();
    partial void OnDealEndDateChanging(System.DateTime value);
    partial void OnDealEndDateChanged();
    partial void OnDealCategoryIdChanging(int value);
    partial void OnDealCategoryIdChanged();
    partial void OnDealPriceCategoryIdChanging(int value);
    partial void OnDealPriceCategoryIdChanged();
    partial void OnDealImageDataChanging(System.Data.Linq.Binary value);
    partial void OnDealImageDataChanged();
    #endregion
		
		public Tbl_Deal()
		{
			this._Tbl_DealComments = new EntitySet<Tbl_DealComment>(new Action<Tbl_DealComment>(this.attach_Tbl_DealComments), new Action<Tbl_DealComment>(this.detach_Tbl_DealComments));
			this._Tbl_UserAccess = default(EntityRef<Tbl_UserAccess>);
			this._Tbl_DealCategory = default(EntityRef<Tbl_DealCategory>);
			this._Tbl_DealPriceCategory = default(EntityRef<Tbl_DealPriceCategory>);
			this._Tbl_DealType = default(EntityRef<Tbl_DealType>);
			this._Tbl_UserAccess1 = default(EntityRef<Tbl_UserAccess>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealID
		{
			get
			{
				return this._DealID;
			}
			set
			{
				if ((this._DealID != value))
				{
					this.OnDealIDChanging(value);
					this.SendPropertyChanging();
					this._DealID = value;
					this.SendPropertyChanged("DealID");
					this.OnDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="Int NOT NULL")]
		public int UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					if (this._Tbl_UserAccess1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealURL", DbType="VarChar(500)")]
		public string DealURL
		{
			get
			{
				return this._DealURL;
			}
			set
			{
				if ((this._DealURL != value))
				{
					this.OnDealURLChanging(value);
					this.SendPropertyChanging();
					this._DealURL = value;
					this.SendPropertyChanged("DealURL");
					this.OnDealURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealStatus", DbType="Int NOT NULL")]
		public int DealStatus
		{
			get
			{
				return this._DealStatus;
			}
			set
			{
				if ((this._DealStatus != value))
				{
					this.OnDealStatusChanging(value);
					this.SendPropertyChanging();
					this._DealStatus = value;
					this.SendPropertyChanged("DealStatus");
					this.OnDealStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal DealPrice
		{
			get
			{
				return this._DealPrice;
			}
			set
			{
				if ((this._DealPrice != value))
				{
					this.OnDealPriceChanging(value);
					this.SendPropertyChanging();
					this._DealPrice = value;
					this.SendPropertyChanged("DealPrice");
					this.OnDealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealTopicName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DealTopicName
		{
			get
			{
				return this._DealTopicName;
			}
			set
			{
				if ((this._DealTopicName != value))
				{
					this.OnDealTopicNameChanging(value);
					this.SendPropertyChanging();
					this._DealTopicName = value;
					this.SendPropertyChanged("DealTopicName");
					this.OnDealTopicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DealDescription
		{
			get
			{
				return this._DealDescription;
			}
			set
			{
				if ((this._DealDescription != value))
				{
					this.OnDealDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DealDescription = value;
					this.SendPropertyChanged("DealDescription");
					this.OnDealDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDegree", DbType="Int NOT NULL")]
		public int DealDegree
		{
			get
			{
				return this._DealDegree;
			}
			set
			{
				if ((this._DealDegree != value))
				{
					this.OnDealDegreeChanging(value);
					this.SendPropertyChanging();
					this._DealDegree = value;
					this.SendPropertyChanged("DealDegree");
					this.OnDealDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealPostedDate", DbType="DateTime NOT NULL")]
		public System.DateTime DealPostedDate
		{
			get
			{
				return this._DealPostedDate;
			}
			set
			{
				if ((this._DealPostedDate != value))
				{
					this.OnDealPostedDateChanging(value);
					this.SendPropertyChanging();
					this._DealPostedDate = value;
					this.SendPropertyChanged("DealPostedDate");
					this.OnDealPostedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._Tbl_UserAccess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealType", DbType="Int NOT NULL")]
		public int DealType
		{
			get
			{
				return this._DealType;
			}
			set
			{
				if ((this._DealType != value))
				{
					if (this._Tbl_DealType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealTypeChanging(value);
					this.SendPropertyChanging();
					this._DealType = value;
					this.SendPropertyChanged("DealType");
					this.OnDealTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealPicture", DbType="VarChar(50)")]
		public string DealPicture
		{
			get
			{
				return this._DealPicture;
			}
			set
			{
				if ((this._DealPicture != value))
				{
					this.OnDealPictureChanging(value);
					this.SendPropertyChanging();
					this._DealPicture = value;
					this.SendPropertyChanged("DealPicture");
					this.OnDealPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealStartDate", DbType="Date NOT NULL")]
		public System.DateTime DealStartDate
		{
			get
			{
				return this._DealStartDate;
			}
			set
			{
				if ((this._DealStartDate != value))
				{
					this.OnDealStartDateChanging(value);
					this.SendPropertyChanging();
					this._DealStartDate = value;
					this.SendPropertyChanged("DealStartDate");
					this.OnDealStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealEndDate", DbType="Date NOT NULL")]
		public System.DateTime DealEndDate
		{
			get
			{
				return this._DealEndDate;
			}
			set
			{
				if ((this._DealEndDate != value))
				{
					this.OnDealEndDateChanging(value);
					this.SendPropertyChanging();
					this._DealEndDate = value;
					this.SendPropertyChanged("DealEndDate");
					this.OnDealEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealCategoryId", DbType="Int NOT NULL")]
		public int DealCategoryId
		{
			get
			{
				return this._DealCategoryId;
			}
			set
			{
				if ((this._DealCategoryId != value))
				{
					if (this._Tbl_DealCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealCategoryId = value;
					this.SendPropertyChanged("DealCategoryId");
					this.OnDealCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealPriceCategoryId", DbType="Int NOT NULL")]
		public int DealPriceCategoryId
		{
			get
			{
				return this._DealPriceCategoryId;
			}
			set
			{
				if ((this._DealPriceCategoryId != value))
				{
					if (this._Tbl_DealPriceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealPriceCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DealPriceCategoryId = value;
					this.SendPropertyChanged("DealPriceCategoryId");
					this.OnDealPriceCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealImageData", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DealImageData
		{
			get
			{
				return this._DealImageData;
			}
			set
			{
				if ((this._DealImageData != value))
				{
					this.OnDealImageDataChanging(value);
					this.SendPropertyChanging();
					this._DealImageData = value;
					this.SendPropertyChanged("DealImageData");
					this.OnDealImageDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Deal_Tbl_DealComment", Storage="_Tbl_DealComments", ThisKey="DealID", OtherKey="DealID")]
		public EntitySet<Tbl_DealComment> Tbl_DealComments
		{
			get
			{
				return this._Tbl_DealComments;
			}
			set
			{
				this._Tbl_DealComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_Deal", Storage="_Tbl_UserAccess", ThisKey="ApprovedBy", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess
		{
			get
			{
				return this._Tbl_UserAccess.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess.Entity = null;
						previousValue.Tbl_Deals.Remove(this);
					}
					this._Tbl_UserAccess.Entity = value;
					if ((value != null))
					{
						value.Tbl_Deals.Add(this);
						this._ApprovedBy = value.UserAccessID;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("Tbl_UserAccess");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealCategory_Tbl_Deal", Storage="_Tbl_DealCategory", ThisKey="DealCategoryId", OtherKey="DealCategoryId", IsForeignKey=true)]
		public Tbl_DealCategory Tbl_DealCategory
		{
			get
			{
				return this._Tbl_DealCategory.Entity;
			}
			set
			{
				Tbl_DealCategory previousValue = this._Tbl_DealCategory.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_DealCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_DealCategory.Entity = null;
						previousValue.Tbl_Deals.Remove(this);
					}
					this._Tbl_DealCategory.Entity = value;
					if ((value != null))
					{
						value.Tbl_Deals.Add(this);
						this._DealCategoryId = value.DealCategoryId;
					}
					else
					{
						this._DealCategoryId = default(int);
					}
					this.SendPropertyChanged("Tbl_DealCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealPriceCategory_Tbl_Deal", Storage="_Tbl_DealPriceCategory", ThisKey="DealPriceCategoryId", OtherKey="DealPriceCategoryId", IsForeignKey=true)]
		public Tbl_DealPriceCategory Tbl_DealPriceCategory
		{
			get
			{
				return this._Tbl_DealPriceCategory.Entity;
			}
			set
			{
				Tbl_DealPriceCategory previousValue = this._Tbl_DealPriceCategory.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_DealPriceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_DealPriceCategory.Entity = null;
						previousValue.Tbl_Deals.Remove(this);
					}
					this._Tbl_DealPriceCategory.Entity = value;
					if ((value != null))
					{
						value.Tbl_Deals.Add(this);
						this._DealPriceCategoryId = value.DealPriceCategoryId;
					}
					else
					{
						this._DealPriceCategoryId = default(int);
					}
					this.SendPropertyChanged("Tbl_DealPriceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_DealType_Tbl_Deal", Storage="_Tbl_DealType", ThisKey="DealType", OtherKey="DealTypeID", IsForeignKey=true)]
		public Tbl_DealType Tbl_DealType
		{
			get
			{
				return this._Tbl_DealType.Entity;
			}
			set
			{
				Tbl_DealType previousValue = this._Tbl_DealType.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_DealType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_DealType.Entity = null;
						previousValue.Tbl_Deals.Remove(this);
					}
					this._Tbl_DealType.Entity = value;
					if ((value != null))
					{
						value.Tbl_Deals.Add(this);
						this._DealType = value.DealTypeID;
					}
					else
					{
						this._DealType = default(int);
					}
					this.SendPropertyChanged("Tbl_DealType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_UserAccess_Tbl_Deal1", Storage="_Tbl_UserAccess1", ThisKey="UserAccessID", OtherKey="UserAccessID", IsForeignKey=true)]
		public Tbl_UserAccess Tbl_UserAccess1
		{
			get
			{
				return this._Tbl_UserAccess1.Entity;
			}
			set
			{
				Tbl_UserAccess previousValue = this._Tbl_UserAccess1.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_UserAccess1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_UserAccess1.Entity = null;
						previousValue.Tbl_Deals1.Remove(this);
					}
					this._Tbl_UserAccess1.Entity = value;
					if ((value != null))
					{
						value.Tbl_Deals1.Add(this);
						this._UserAccessID = value.UserAccessID;
					}
					else
					{
						this._UserAccessID = default(int);
					}
					this.SendPropertyChanged("Tbl_UserAccess1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_DealComments(Tbl_DealComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Deal = this;
		}
		
		private void detach_Tbl_DealComments(Tbl_DealComment entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Deal = null;
		}
	}
}
#pragma warning restore 1591
